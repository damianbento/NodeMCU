#define BLYNK_PRINT Serial
#include <U8g2lib.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include "DHT.h"
#include <SimpleTimer.h> 
#define DHTTYPE DHT11
#define dht_dpin D4
U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

DHT dht(dht_dpin, DHTTYPE); 
SimpleTimer timer;
char auth[] = "*******************************";
char ssid[] = "sn-t";
char pass[] = "***************";
float t;
float h;


#define hum_width 32
#define hum_height 32
static unsigned char hum_bits[] = {
   0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xe0, 0x03,
   0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x78, 0x1e,
   0x00, 0xe0, 0x38, 0x1d, 0x00, 0xf0, 0x1d, 0x39, 0x00, 0xf8, 0x1f, 0x7b,
   0x00, 0xb8, 0x0f, 0x72, 0x30, 0x3c, 0x0f, 0x74, 0x78, 0x1e, 0x0f, 0xec,
   0xf8, 0x0f, 0x1e, 0xe0, 0xfc, 0x07, 0x1c, 0xe0, 0xfe, 0x07, 0x38, 0xe0,
   0xce, 0x03, 0x78, 0xf0, 0x8f, 0x03, 0x70, 0x78, 0x87, 0x03, 0xf0, 0x3c,
   0x87, 0x03, 0xe0, 0x1f, 0x87, 0x03, 0xe8, 0x0f, 0xcf, 0x03, 0xc8, 0x03,
   0xfe, 0x01, 0xc8, 0x01, 0xfc, 0x00, 0xc8, 0x01, 0xf0, 0x00, 0xec, 0x00,
   0xe0, 0x00, 0xe4, 0x00, 0xe0, 0x01, 0xe4, 0x00, 0xc0, 0xc1, 0x71, 0x00,
   0xc0, 0x07, 0x78, 0x00, 0x80, 0x1f, 0x3f, 0x00, 0x00, 0xff, 0x1f, 0x00,
   0x00, 0xfc, 0x07, 0x00, 0x00, 0xe0, 0x00, 0x00 };
   
#define Temperature_20Icon_width 27
#define Temperature_20Icon_height 47
static const unsigned char Temperature_20Icon_bits[] U8X8_PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x80, 0x7f, 0x00, 0x00,
  0xc0, 0xe1, 0x00, 0x00, 0xe0, 0xc0, 0x01, 0x00, 0x60, 0x80, 0xf9, 0x03,
  0x60, 0x80, 0x01, 0x00, 0x60, 0x80, 0x01, 0x00, 0x60, 0x80, 0x79, 0x00,
  0x60, 0x80, 0x01, 0x00, 0x60, 0x80, 0x01, 0x00, 0x60, 0x80, 0xf9, 0x03,
  0x60, 0x80, 0x01, 0x00, 0x60, 0x80, 0x01, 0x00, 0x60, 0x8c, 0x79, 0x00,
  0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0xf9, 0x03,
  0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0x79, 0x00,
  0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0xf9, 0x03,
  0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0x01, 0x00, 0x60, 0x9e, 0x01, 0x00,
  0x70, 0x9e, 0x03, 0x00, 0x38, 0x1e, 0x07, 0x00, 0x18, 0x3e, 0x0e, 0x00,
  0x1c, 0x3f, 0x0c, 0x00, 0x0c, 0x7f, 0x18, 0x00, 0x8c, 0xff, 0x18, 0x00,
  0x8e, 0xff, 0x38, 0x00, 0xc6, 0xff, 0x31, 0x00, 0xc6, 0xff, 0x31, 0x00,
  0xc6, 0xff, 0x31, 0x00, 0x8e, 0xff, 0x38, 0x00, 0x8c, 0xff, 0x18, 0x00,
  0x0c, 0x7f, 0x1c, 0x00, 0x3c, 0x1c, 0x0e, 0x00, 0x78, 0x00, 0x06, 0x00,
  0xe0, 0x80, 0x07, 0x00, 0xe0, 0xff, 0x03, 0x00, 0x80, 0xff, 0x00, 0x00,
  0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



const char DEGREE_SYMBOL[] = { 0xB0, '\0' };

void setup()
{
    Serial.begin(9600);
    u8g2.begin();
    Blynk.begin(auth, ssid, pass);
    dht.begin();
    timer.setInterval(2000, sendUptime);
}

void loop()
{
  Blynk.run();
  timer.run();
}

void sendUptime()
{
  float h = dht.readHumidity();
  float t = dht.readTemperature(); 
int tem = t;
int hum = h;
  // Comprobamos si ha habido alg√∫n error en la lectura
  if (isnan(h) || isnan(t)) {
    Serial.println("Error obteniendo los datos del sensor DHT11");
    return;
  }
////   
u8g2.clearBuffer(); 
    u8g2.setFont(u8g2_font_inb38_mf);  // choose a suitable font
    u8g2.setCursor(3,55);
    u8g2.print(tem);
    u8g2.setFont(u8g2_font_inb19_mf);
    u8g2.setCursor(67,55);
    u8g2.print("C");
    u8g2.drawUTF8(83, 45, DEGREE_SYMBOL);
    u8g2.drawXBMP( 100, 10, Temperature_20Icon_width, Temperature_20Icon_height, Temperature_20Icon_bits);
u8g2.sendBuffer();
delay(4000);
u8g2.clearBuffer();
u8g2.sendBuffer();    
    u8g2.setFont(u8g2_font_inb38_mf);  // choose a suitable font
    u8g2.setCursor(3,55);
    u8g2.print(hum);
    u8g2.setFont(u8g2_font_inb19_mf);
    u8g2.setCursor(67,55);
    u8g2.print("C");
    u8g2.drawUTF8(68, 50, "%");
    u8g2.drawXBMP( 90, 10, hum_width, hum_height, hum_bits);
   u8g2.sendBuffer();
delay(4000);

///////////
  
 
  Serial.println("Humidity and temperature\n\n");
  Serial.print("Current humidity = ");
  Serial.print(h);
  Serial.print("%  ");
  Serial.print("temperature = ");
  Serial.print(t); 
  Blynk.virtualWrite(V8, t);
  Blynk.virtualWrite(V9, h); 
}
